Terminals unused in grammar

   DIV
   OPERATOR
   RELOP
   NONE


Grammar

    0 $accept: program $end

    1 $@1: %empty

    2 $@2: %empty

    3 $@3: %empty

    4 $@4: %empty

    5 program: PROGRAM ID '(' identifier_list $@1 ')' ';' $@2 declarations $@3 subprogram_declarations $@4 compound_statement '.'

    6 identifier_list: ID
    7                | identifier_list ',' ID

    8 declarations: declarations VAR identifier_list ':' type ';'
    9             | %empty

   10 type: standard_type
   11     | ARRAY '[' NUM '.' '.' NUM ']' OF standard_type

   12 standard_type: INTEGER
   13              | REAL

   14 subprogram_declarations: subprogram_declarations subprogram_declaration ';'
   15                        | %empty

   16 subprogram_declaration: subprogram_head declarations compound_statement

   17 subprogram_head: FUNCTION ID arguments ':' standard_type ';'
   18                | PROCEDURE ID arguments ';'

   19 arguments: '(' parameter_list ')'
   20          | %empty

   21 parameter_list: identifier_list ':' type
   22               | parameter_list ',' identifier_list ':' type
   23               | parameter_list ';' identifier_list ':' type

   24 compound_statement: BEGIN_TOKEN optional_statements END_TOKEN

   25 optional_statements: statement_list
   26                    | %empty

   27 statement_list: statement
   28               | statement_list ';' statement

   29 statement: variable ASSIGNOP expression
   30          | procedure_statement
   31          | compound_statement

   32 @5: %empty

   33 @6: %empty

   34 statement: IF expression @5 THEN statement @6 ELSE statement

   35 @7: %empty

   36 @8: %empty

   37 statement: WHILE @7 expression DO @8 statement

   38 $@9: %empty

   39 statement: WRITE '(' $@9 expression_list ')'

   40 $@10: %empty

   41 statement: READ '(' $@10 expression_list ')'

   42 variable: ID
   43         | ID '[' expression ']'

   44 procedure_statement: ID

   45 $@11: %empty

   46 procedure_statement: ID '(' $@11 expression_list ')'

   47 expression_list: expression
   48                | expression_list ',' expression

   49 expression: simple_expression
   50           | simple_expression EQUAL simple_expression
   51           | simple_expression NOT_EQUAL simple_expression
   52           | simple_expression LESS simple_expression
   53           | simple_expression LESS_OR_EQ simple_expression
   54           | simple_expression GREATER simple_expression
   55           | simple_expression GREATER_OR_EQ simple_expression

   56 simple_expression: term
   57                  | t_PLUS term
   58                  | t_MINUS term
   59                  | simple_expression t_PLUS term
   60                  | simple_expression t_MINUS term
   61                  | simple_expression OR term
   62                  | simple_expression AND term

   63 term: factor
   64     | term MODULO factor
   65     | term MUL factor
   66     | term M_DIV factor

   67 factor: variable

   68 $@12: %empty

   69 factor: ID '(' $@12 expression_list ')'
   70       | NUM
   71       | '(' expression ')'
   72       | NOT factor


Terminals, with rules where they appear

$end (0) 0
'(' (40) 5 19 39 41 46 69 71
')' (41) 5 19 39 41 46 69 71
',' (44) 7 22 48
'.' (46) 5 11
':' (58) 8 17 21 22 23
';' (59) 5 8 14 17 18 23 28
'[' (91) 11 43
']' (93) 11 43
error (256)
PROGRAM (258) 5
NUM (259) 11 70
ID (260) 5 6 7 17 18 42 43 44 46 69
VAR (261) 8
DIV (262)
MODULO (263) 64
MUL (264) 65
M_DIV (265) 66
INTEGER (266) 12
BEGIN_TOKEN (267) 24
END_TOKEN (268) 24
OPERATOR (269)
ASSIGNOP (270) 29
READ (271) 41
WRITE (272) 39
REAL (273) 13
ARRAY (274) 11
OF (275) 11
FUNCTION (276) 17
PROCEDURE (277) 18
IF (278) 34
THEN (279) 34
ELSE (280) 34
WHILE (281) 37
DO (282) 37
RELOP (283)
OR (284) 61
EQUAL (285) 50
NOT_EQUAL (286) 51
LESS (287) 52
LESS_OR_EQ (288) 53
GREATER (289) 54
GREATER_OR_EQ (290) 55
t_PLUS (291) 57 59
t_MINUS (292) 58 60
AND (293) 62
NOT (294) 72
NONE (295)


Nonterminals, with rules where they appear

$accept (49)
    on left: 0
program (50)
    on left: 5, on right: 0
$@1 (51)
    on left: 1, on right: 5
$@2 (52)
    on left: 2, on right: 5
$@3 (53)
    on left: 3, on right: 5
$@4 (54)
    on left: 4, on right: 5
identifier_list (55)
    on left: 6 7, on right: 5 7 8 21 22 23
declarations (56)
    on left: 8 9, on right: 5 8 16
type (57)
    on left: 10 11, on right: 8 21 22 23
standard_type (58)
    on left: 12 13, on right: 10 11 17
subprogram_declarations (59)
    on left: 14 15, on right: 5 14
subprogram_declaration (60)
    on left: 16, on right: 14
subprogram_head (61)
    on left: 17 18, on right: 16
arguments (62)
    on left: 19 20, on right: 17 18
parameter_list (63)
    on left: 21 22 23, on right: 19 22 23
compound_statement (64)
    on left: 24, on right: 5 16 31
optional_statements (65)
    on left: 25 26, on right: 24
statement_list (66)
    on left: 27 28, on right: 25 28
statement (67)
    on left: 29 30 31 34 37 39 41, on right: 27 28 34 37
@5 (68)
    on left: 32, on right: 34
@6 (69)
    on left: 33, on right: 34
@7 (70)
    on left: 35, on right: 37
@8 (71)
    on left: 36, on right: 37
$@9 (72)
    on left: 38, on right: 39
$@10 (73)
    on left: 40, on right: 41
variable (74)
    on left: 42 43, on right: 29 67
procedure_statement (75)
    on left: 44 46, on right: 30
$@11 (76)
    on left: 45, on right: 46
expression_list (77)
    on left: 47 48, on right: 39 41 46 48 69
expression (78)
    on left: 49 50 51 52 53 54 55, on right: 29 34 37 43 47 48 71
simple_expression (79)
    on left: 56 57 58 59 60 61 62, on right: 49 50 51 52 53 54 55 59
    60 61 62
term (80)
    on left: 63 64 65 66, on right: 56 57 58 59 60 61 62 64 65 66
factor (81)
    on left: 67 69 70 71 72, on right: 63 64 65 66 72
$@12 (82)
    on left: 68, on right: 69


State 0

    0 $accept: . program $end
    5 program: . PROGRAM ID '(' identifier_list $@1 ')' ';' $@2 declarations $@3 subprogram_declarations $@4 compound_statement '.'

    PROGRAM  shift, and go to state 1

    program  go to state 2


State 1

    5 program: PROGRAM . ID '(' identifier_list $@1 ')' ';' $@2 declarations $@3 subprogram_declarations $@4 compound_statement '.'

    ID  shift, and go to state 3


State 2

    0 $accept: program . $end

    $end  shift, and go to state 4


State 3

    5 program: PROGRAM ID . '(' identifier_list $@1 ')' ';' $@2 declarations $@3 subprogram_declarations $@4 compound_statement '.'

    '('  shift, and go to state 5


State 4

    0 $accept: program $end .

    $default  accept


State 5

    5 program: PROGRAM ID '(' . identifier_list $@1 ')' ';' $@2 declarations $@3 subprogram_declarations $@4 compound_statement '.'
    6 identifier_list: . ID
    7                | . identifier_list ',' ID

    ID  shift, and go to state 6

    identifier_list  go to state 7


State 6

    6 identifier_list: ID .

    $default  reduce using rule 6 (identifier_list)


State 7

    1 $@1: . %empty  [')']
    5 program: PROGRAM ID '(' identifier_list . $@1 ')' ';' $@2 declarations $@3 subprogram_declarations $@4 compound_statement '.'
    7 identifier_list: identifier_list . ',' ID

    ','  shift, and go to state 8

    $default  reduce using rule 1 ($@1)

    $@1  go to state 9


State 8

    7 identifier_list: identifier_list ',' . ID

    ID  shift, and go to state 10


State 9

    5 program: PROGRAM ID '(' identifier_list $@1 . ')' ';' $@2 declarations $@3 subprogram_declarations $@4 compound_statement '.'

    ')'  shift, and go to state 11


State 10

    7 identifier_list: identifier_list ',' ID .

    $default  reduce using rule 7 (identifier_list)


State 11

    5 program: PROGRAM ID '(' identifier_list $@1 ')' . ';' $@2 declarations $@3 subprogram_declarations $@4 compound_statement '.'

    ';'  shift, and go to state 12


State 12

    2 $@2: . %empty
    5 program: PROGRAM ID '(' identifier_list $@1 ')' ';' . $@2 declarations $@3 subprogram_declarations $@4 compound_statement '.'

    $default  reduce using rule 2 ($@2)

    $@2  go to state 13


State 13

    5 program: PROGRAM ID '(' identifier_list $@1 ')' ';' $@2 . declarations $@3 subprogram_declarations $@4 compound_statement '.'
    8 declarations: . declarations VAR identifier_list ':' type ';'
    9             | . %empty

    $default  reduce using rule 9 (declarations)

    declarations  go to state 14


State 14

    3 $@3: . %empty  [BEGIN_TOKEN, FUNCTION, PROCEDURE]
    5 program: PROGRAM ID '(' identifier_list $@1 ')' ';' $@2 declarations . $@3 subprogram_declarations $@4 compound_statement '.'
    8 declarations: declarations . VAR identifier_list ':' type ';'

    VAR  shift, and go to state 15

    $default  reduce using rule 3 ($@3)

    $@3  go to state 16


State 15

    6 identifier_list: . ID
    7                | . identifier_list ',' ID
    8 declarations: declarations VAR . identifier_list ':' type ';'

    ID  shift, and go to state 6

    identifier_list  go to state 17


State 16

    5 program: PROGRAM ID '(' identifier_list $@1 ')' ';' $@2 declarations $@3 . subprogram_declarations $@4 compound_statement '.'
   14 subprogram_declarations: . subprogram_declarations subprogram_declaration ';'
   15                        | . %empty

    $default  reduce using rule 15 (subprogram_declarations)

    subprogram_declarations  go to state 18


State 17

    7 identifier_list: identifier_list . ',' ID
    8 declarations: declarations VAR identifier_list . ':' type ';'

    ','  shift, and go to state 8
    ':'  shift, and go to state 19


State 18

    4 $@4: . %empty  [BEGIN_TOKEN]
    5 program: PROGRAM ID '(' identifier_list $@1 ')' ';' $@2 declarations $@3 subprogram_declarations . $@4 compound_statement '.'
   14 subprogram_declarations: subprogram_declarations . subprogram_declaration ';'
   16 subprogram_declaration: . subprogram_head declarations compound_statement
   17 subprogram_head: . FUNCTION ID arguments ':' standard_type ';'
   18                | . PROCEDURE ID arguments ';'

    FUNCTION   shift, and go to state 20
    PROCEDURE  shift, and go to state 21

    $default  reduce using rule 4 ($@4)

    $@4                     go to state 22
    subprogram_declaration  go to state 23
    subprogram_head         go to state 24


State 19

    8 declarations: declarations VAR identifier_list ':' . type ';'
   10 type: . standard_type
   11     | . ARRAY '[' NUM '.' '.' NUM ']' OF standard_type
   12 standard_type: . INTEGER
   13              | . REAL

    INTEGER  shift, and go to state 25
    REAL     shift, and go to state 26
    ARRAY    shift, and go to state 27

    type           go to state 28
    standard_type  go to state 29


State 20

   17 subprogram_head: FUNCTION . ID arguments ':' standard_type ';'

    ID  shift, and go to state 30


State 21

   18 subprogram_head: PROCEDURE . ID arguments ';'

    ID  shift, and go to state 31


State 22

    5 program: PROGRAM ID '(' identifier_list $@1 ')' ';' $@2 declarations $@3 subprogram_declarations $@4 . compound_statement '.'
   24 compound_statement: . BEGIN_TOKEN optional_statements END_TOKEN

    BEGIN_TOKEN  shift, and go to state 32

    compound_statement  go to state 33


State 23

   14 subprogram_declarations: subprogram_declarations subprogram_declaration . ';'

    ';'  shift, and go to state 34


State 24

    8 declarations: . declarations VAR identifier_list ':' type ';'
    9             | . %empty
   16 subprogram_declaration: subprogram_head . declarations compound_statement

    $default  reduce using rule 9 (declarations)

    declarations  go to state 35


State 25

   12 standard_type: INTEGER .

    $default  reduce using rule 12 (standard_type)


State 26

   13 standard_type: REAL .

    $default  reduce using rule 13 (standard_type)


State 27

   11 type: ARRAY . '[' NUM '.' '.' NUM ']' OF standard_type

    '['  shift, and go to state 36


State 28

    8 declarations: declarations VAR identifier_list ':' type . ';'

    ';'  shift, and go to state 37


State 29

   10 type: standard_type .

    $default  reduce using rule 10 (type)


State 30

   17 subprogram_head: FUNCTION ID . arguments ':' standard_type ';'
   19 arguments: . '(' parameter_list ')'
   20          | . %empty  [':']

    '('  shift, and go to state 38

    $default  reduce using rule 20 (arguments)

    arguments  go to state 39


State 31

   18 subprogram_head: PROCEDURE ID . arguments ';'
   19 arguments: . '(' parameter_list ')'
   20          | . %empty  [';']

    '('  shift, and go to state 38

    $default  reduce using rule 20 (arguments)

    arguments  go to state 40


State 32

   24 compound_statement: . BEGIN_TOKEN optional_statements END_TOKEN
   24                   | BEGIN_TOKEN . optional_statements END_TOKEN
   25 optional_statements: . statement_list
   26                    | . %empty  [END_TOKEN]
   27 statement_list: . statement
   28               | . statement_list ';' statement
   29 statement: . variable ASSIGNOP expression
   30          | . procedure_statement
   31          | . compound_statement
   34          | . IF expression @5 THEN statement @6 ELSE statement
   37          | . WHILE @7 expression DO @8 statement
   39          | . WRITE '(' $@9 expression_list ')'
   41          | . READ '(' $@10 expression_list ')'
   42 variable: . ID
   43         | . ID '[' expression ']'
   44 procedure_statement: . ID
   46                    | . ID '(' $@11 expression_list ')'

    ID           shift, and go to state 41
    BEGIN_TOKEN  shift, and go to state 32
    READ         shift, and go to state 42
    WRITE        shift, and go to state 43
    IF           shift, and go to state 44
    WHILE        shift, and go to state 45

    $default  reduce using rule 26 (optional_statements)

    compound_statement   go to state 46
    optional_statements  go to state 47
    statement_list       go to state 48
    statement            go to state 49
    variable             go to state 50
    procedure_statement  go to state 51


State 33

    5 program: PROGRAM ID '(' identifier_list $@1 ')' ';' $@2 declarations $@3 subprogram_declarations $@4 compound_statement . '.'

    '.'  shift, and go to state 52


State 34

   14 subprogram_declarations: subprogram_declarations subprogram_declaration ';' .

    $default  reduce using rule 14 (subprogram_declarations)


State 35

    8 declarations: declarations . VAR identifier_list ':' type ';'
   16 subprogram_declaration: subprogram_head declarations . compound_statement
   24 compound_statement: . BEGIN_TOKEN optional_statements END_TOKEN

    VAR          shift, and go to state 15
    BEGIN_TOKEN  shift, and go to state 32

    compound_statement  go to state 53


State 36

   11 type: ARRAY '[' . NUM '.' '.' NUM ']' OF standard_type

    NUM  shift, and go to state 54


State 37

    8 declarations: declarations VAR identifier_list ':' type ';' .

    $default  reduce using rule 8 (declarations)


State 38

    6 identifier_list: . ID
    7                | . identifier_list ',' ID
   19 arguments: '(' . parameter_list ')'
   21 parameter_list: . identifier_list ':' type
   22               | . parameter_list ',' identifier_list ':' type
   23               | . parameter_list ';' identifier_list ':' type

    ID  shift, and go to state 6

    identifier_list  go to state 55
    parameter_list   go to state 56


State 39

   17 subprogram_head: FUNCTION ID arguments . ':' standard_type ';'

    ':'  shift, and go to state 57


State 40

   18 subprogram_head: PROCEDURE ID arguments . ';'

    ';'  shift, and go to state 58


State 41

   42 variable: ID .  [ASSIGNOP]
   43         | ID . '[' expression ']'
   44 procedure_statement: ID .  [END_TOKEN, ELSE, ';']
   46                    | ID . '(' $@11 expression_list ')'

    '('  shift, and go to state 59
    '['  shift, and go to state 60

    ASSIGNOP  reduce using rule 42 (variable)
    $default  reduce using rule 44 (procedure_statement)


State 42

   41 statement: READ . '(' $@10 expression_list ')'

    '('  shift, and go to state 61


State 43

   39 statement: WRITE . '(' $@9 expression_list ')'

    '('  shift, and go to state 62


State 44

   34 statement: IF . expression @5 THEN statement @6 ELSE statement
   42 variable: . ID
   43         | . ID '[' expression ']'
   49 expression: . simple_expression
   50           | . simple_expression EQUAL simple_expression
   51           | . simple_expression NOT_EQUAL simple_expression
   52           | . simple_expression LESS simple_expression
   53           | . simple_expression LESS_OR_EQ simple_expression
   54           | . simple_expression GREATER simple_expression
   55           | . simple_expression GREATER_OR_EQ simple_expression
   56 simple_expression: . term
   57                  | . t_PLUS term
   58                  | . t_MINUS term
   59                  | . simple_expression t_PLUS term
   60                  | . simple_expression t_MINUS term
   61                  | . simple_expression OR term
   62                  | . simple_expression AND term
   63 term: . factor
   64     | . term MODULO factor
   65     | . term MUL factor
   66     | . term M_DIV factor
   67 factor: . variable
   69       | . ID '(' $@12 expression_list ')'
   70       | . NUM
   71       | . '(' expression ')'
   72       | . NOT factor

    NUM      shift, and go to state 63
    ID       shift, and go to state 64
    t_PLUS   shift, and go to state 65
    t_MINUS  shift, and go to state 66
    NOT      shift, and go to state 67
    '('      shift, and go to state 68

    variable           go to state 69
    expression         go to state 70
    simple_expression  go to state 71
    term               go to state 72
    factor             go to state 73


State 45

   35 @7: . %empty
   37 statement: WHILE . @7 expression DO @8 statement

    $default  reduce using rule 35 (@7)

    @7  go to state 74


State 46

   31 statement: compound_statement .

    $default  reduce using rule 31 (statement)


State 47

   24 compound_statement: BEGIN_TOKEN optional_statements . END_TOKEN

    END_TOKEN  shift, and go to state 75


State 48

   25 optional_statements: statement_list .  [END_TOKEN]
   28 statement_list: statement_list . ';' statement

    ';'  shift, and go to state 76

    $default  reduce using rule 25 (optional_statements)


State 49

   27 statement_list: statement .

    $default  reduce using rule 27 (statement_list)


State 50

   29 statement: variable . ASSIGNOP expression

    ASSIGNOP  shift, and go to state 77


State 51

   30 statement: procedure_statement .

    $default  reduce using rule 30 (statement)


State 52

    5 program: PROGRAM ID '(' identifier_list $@1 ')' ';' $@2 declarations $@3 subprogram_declarations $@4 compound_statement '.' .

    $default  reduce using rule 5 (program)


State 53

   16 subprogram_declaration: subprogram_head declarations compound_statement .

    $default  reduce using rule 16 (subprogram_declaration)


State 54

   11 type: ARRAY '[' NUM . '.' '.' NUM ']' OF standard_type

    '.'  shift, and go to state 78


State 55

    7 identifier_list: identifier_list . ',' ID
   21 parameter_list: identifier_list . ':' type

    ','  shift, and go to state 8
    ':'  shift, and go to state 79


State 56

   19 arguments: '(' parameter_list . ')'
   22 parameter_list: parameter_list . ',' identifier_list ':' type
   23               | parameter_list . ';' identifier_list ':' type

    ')'  shift, and go to state 80
    ';'  shift, and go to state 81
    ','  shift, and go to state 82


State 57

   12 standard_type: . INTEGER
   13              | . REAL
   17 subprogram_head: FUNCTION ID arguments ':' . standard_type ';'

    INTEGER  shift, and go to state 25
    REAL     shift, and go to state 26

    standard_type  go to state 83


State 58

   18 subprogram_head: PROCEDURE ID arguments ';' .

    $default  reduce using rule 18 (subprogram_head)


State 59

   45 $@11: . %empty
   46 procedure_statement: ID '(' . $@11 expression_list ')'

    $default  reduce using rule 45 ($@11)

    $@11  go to state 84


State 60

   42 variable: . ID
   43         | . ID '[' expression ']'
   43         | ID '[' . expression ']'
   49 expression: . simple_expression
   50           | . simple_expression EQUAL simple_expression
   51           | . simple_expression NOT_EQUAL simple_expression
   52           | . simple_expression LESS simple_expression
   53           | . simple_expression LESS_OR_EQ simple_expression
   54           | . simple_expression GREATER simple_expression
   55           | . simple_expression GREATER_OR_EQ simple_expression
   56 simple_expression: . term
   57                  | . t_PLUS term
   58                  | . t_MINUS term
   59                  | . simple_expression t_PLUS term
   60                  | . simple_expression t_MINUS term
   61                  | . simple_expression OR term
   62                  | . simple_expression AND term
   63 term: . factor
   64     | . term MODULO factor
   65     | . term MUL factor
   66     | . term M_DIV factor
   67 factor: . variable
   69       | . ID '(' $@12 expression_list ')'
   70       | . NUM
   71       | . '(' expression ')'
   72       | . NOT factor

    NUM      shift, and go to state 63
    ID       shift, and go to state 64
    t_PLUS   shift, and go to state 65
    t_MINUS  shift, and go to state 66
    NOT      shift, and go to state 67
    '('      shift, and go to state 68

    variable           go to state 69
    expression         go to state 85
    simple_expression  go to state 71
    term               go to state 72
    factor             go to state 73


State 61

   40 $@10: . %empty
   41 statement: READ '(' . $@10 expression_list ')'

    $default  reduce using rule 40 ($@10)

    $@10  go to state 86


State 62

   38 $@9: . %empty
   39 statement: WRITE '(' . $@9 expression_list ')'

    $default  reduce using rule 38 ($@9)

    $@9  go to state 87


State 63

   70 factor: NUM .

    $default  reduce using rule 70 (factor)


State 64

   42 variable: ID .  [MODULO, MUL, M_DIV, END_TOKEN, THEN, ELSE, DO, OR, EQUAL, NOT_EQUAL, LESS, LESS_OR_EQ, GREATER, GREATER_OR_EQ, t_PLUS, t_MINUS, AND, ')', ';', ',', ']']
   43         | ID . '[' expression ']'
   69 factor: ID . '(' $@12 expression_list ')'

    '('  shift, and go to state 88
    '['  shift, and go to state 60

    $default  reduce using rule 42 (variable)


State 65

   42 variable: . ID
   43         | . ID '[' expression ']'
   57 simple_expression: t_PLUS . term
   63 term: . factor
   64     | . term MODULO factor
   65     | . term MUL factor
   66     | . term M_DIV factor
   67 factor: . variable
   69       | . ID '(' $@12 expression_list ')'
   70       | . NUM
   71       | . '(' expression ')'
   72       | . NOT factor

    NUM  shift, and go to state 63
    ID   shift, and go to state 64
    NOT  shift, and go to state 67
    '('  shift, and go to state 68

    variable  go to state 69
    term      go to state 89
    factor    go to state 73


State 66

   42 variable: . ID
   43         | . ID '[' expression ']'
   58 simple_expression: t_MINUS . term
   63 term: . factor
   64     | . term MODULO factor
   65     | . term MUL factor
   66     | . term M_DIV factor
   67 factor: . variable
   69       | . ID '(' $@12 expression_list ')'
   70       | . NUM
   71       | . '(' expression ')'
   72       | . NOT factor

    NUM  shift, and go to state 63
    ID   shift, and go to state 64
    NOT  shift, and go to state 67
    '('  shift, and go to state 68

    variable  go to state 69
    term      go to state 90
    factor    go to state 73


State 67

   42 variable: . ID
   43         | . ID '[' expression ']'
   67 factor: . variable
   69       | . ID '(' $@12 expression_list ')'
   70       | . NUM
   71       | . '(' expression ')'
   72       | . NOT factor
   72       | NOT . factor

    NUM  shift, and go to state 63
    ID   shift, and go to state 64
    NOT  shift, and go to state 67
    '('  shift, and go to state 68

    variable  go to state 69
    factor    go to state 91


State 68

   42 variable: . ID
   43         | . ID '[' expression ']'
   49 expression: . simple_expression
   50           | . simple_expression EQUAL simple_expression
   51           | . simple_expression NOT_EQUAL simple_expression
   52           | . simple_expression LESS simple_expression
   53           | . simple_expression LESS_OR_EQ simple_expression
   54           | . simple_expression GREATER simple_expression
   55           | . simple_expression GREATER_OR_EQ simple_expression
   56 simple_expression: . term
   57                  | . t_PLUS term
   58                  | . t_MINUS term
   59                  | . simple_expression t_PLUS term
   60                  | . simple_expression t_MINUS term
   61                  | . simple_expression OR term
   62                  | . simple_expression AND term
   63 term: . factor
   64     | . term MODULO factor
   65     | . term MUL factor
   66     | . term M_DIV factor
   67 factor: . variable
   69       | . ID '(' $@12 expression_list ')'
   70       | . NUM
   71       | . '(' expression ')'
   71       | '(' . expression ')'
   72       | . NOT factor

    NUM      shift, and go to state 63
    ID       shift, and go to state 64
    t_PLUS   shift, and go to state 65
    t_MINUS  shift, and go to state 66
    NOT      shift, and go to state 67
    '('      shift, and go to state 68

    variable           go to state 69
    expression         go to state 92
    simple_expression  go to state 71
    term               go to state 72
    factor             go to state 73


State 69

   67 factor: variable .

    $default  reduce using rule 67 (factor)


State 70

   32 @5: . %empty
   34 statement: IF expression . @5 THEN statement @6 ELSE statement

    $default  reduce using rule 32 (@5)

    @5  go to state 93


State 71

   49 expression: simple_expression .  [END_TOKEN, THEN, ELSE, DO, ')', ';', ',', ']']
   50           | simple_expression . EQUAL simple_expression
   51           | simple_expression . NOT_EQUAL simple_expression
   52           | simple_expression . LESS simple_expression
   53           | simple_expression . LESS_OR_EQ simple_expression
   54           | simple_expression . GREATER simple_expression
   55           | simple_expression . GREATER_OR_EQ simple_expression
   59 simple_expression: simple_expression . t_PLUS term
   60                  | simple_expression . t_MINUS term
   61                  | simple_expression . OR term
   62                  | simple_expression . AND term

    OR             shift, and go to state 94
    EQUAL          shift, and go to state 95
    NOT_EQUAL      shift, and go to state 96
    LESS           shift, and go to state 97
    LESS_OR_EQ     shift, and go to state 98
    GREATER        shift, and go to state 99
    GREATER_OR_EQ  shift, and go to state 100
    t_PLUS         shift, and go to state 101
    t_MINUS        shift, and go to state 102
    AND            shift, and go to state 103

    $default  reduce using rule 49 (expression)


State 72

   56 simple_expression: term .  [END_TOKEN, THEN, ELSE, DO, OR, EQUAL, NOT_EQUAL, LESS, LESS_OR_EQ, GREATER, GREATER_OR_EQ, t_PLUS, t_MINUS, AND, ')', ';', ',', ']']
   64 term: term . MODULO factor
   65     | term . MUL factor
   66     | term . M_DIV factor

    MODULO  shift, and go to state 104
    MUL     shift, and go to state 105
    M_DIV   shift, and go to state 106

    $default  reduce using rule 56 (simple_expression)


State 73

   63 term: factor .

    $default  reduce using rule 63 (term)


State 74

   37 statement: WHILE @7 . expression DO @8 statement
   42 variable: . ID
   43         | . ID '[' expression ']'
   49 expression: . simple_expression
   50           | . simple_expression EQUAL simple_expression
   51           | . simple_expression NOT_EQUAL simple_expression
   52           | . simple_expression LESS simple_expression
   53           | . simple_expression LESS_OR_EQ simple_expression
   54           | . simple_expression GREATER simple_expression
   55           | . simple_expression GREATER_OR_EQ simple_expression
   56 simple_expression: . term
   57                  | . t_PLUS term
   58                  | . t_MINUS term
   59                  | . simple_expression t_PLUS term
   60                  | . simple_expression t_MINUS term
   61                  | . simple_expression OR term
   62                  | . simple_expression AND term
   63 term: . factor
   64     | . term MODULO factor
   65     | . term MUL factor
   66     | . term M_DIV factor
   67 factor: . variable
   69       | . ID '(' $@12 expression_list ')'
   70       | . NUM
   71       | . '(' expression ')'
   72       | . NOT factor

    NUM      shift, and go to state 63
    ID       shift, and go to state 64
    t_PLUS   shift, and go to state 65
    t_MINUS  shift, and go to state 66
    NOT      shift, and go to state 67
    '('      shift, and go to state 68

    variable           go to state 69
    expression         go to state 107
    simple_expression  go to state 71
    term               go to state 72
    factor             go to state 73


State 75

   24 compound_statement: BEGIN_TOKEN optional_statements END_TOKEN .

    $default  reduce using rule 24 (compound_statement)


State 76

   24 compound_statement: . BEGIN_TOKEN optional_statements END_TOKEN
   28 statement_list: statement_list ';' . statement
   29 statement: . variable ASSIGNOP expression
   30          | . procedure_statement
   31          | . compound_statement
   34          | . IF expression @5 THEN statement @6 ELSE statement
   37          | . WHILE @7 expression DO @8 statement
   39          | . WRITE '(' $@9 expression_list ')'
   41          | . READ '(' $@10 expression_list ')'
   42 variable: . ID
   43         | . ID '[' expression ']'
   44 procedure_statement: . ID
   46                    | . ID '(' $@11 expression_list ')'

    ID           shift, and go to state 41
    BEGIN_TOKEN  shift, and go to state 32
    READ         shift, and go to state 42
    WRITE        shift, and go to state 43
    IF           shift, and go to state 44
    WHILE        shift, and go to state 45

    compound_statement   go to state 46
    statement            go to state 108
    variable             go to state 50
    procedure_statement  go to state 51


State 77

   29 statement: variable ASSIGNOP . expression
   42 variable: . ID
   43         | . ID '[' expression ']'
   49 expression: . simple_expression
   50           | . simple_expression EQUAL simple_expression
   51           | . simple_expression NOT_EQUAL simple_expression
   52           | . simple_expression LESS simple_expression
   53           | . simple_expression LESS_OR_EQ simple_expression
   54           | . simple_expression GREATER simple_expression
   55           | . simple_expression GREATER_OR_EQ simple_expression
   56 simple_expression: . term
   57                  | . t_PLUS term
   58                  | . t_MINUS term
   59                  | . simple_expression t_PLUS term
   60                  | . simple_expression t_MINUS term
   61                  | . simple_expression OR term
   62                  | . simple_expression AND term
   63 term: . factor
   64     | . term MODULO factor
   65     | . term MUL factor
   66     | . term M_DIV factor
   67 factor: . variable
   69       | . ID '(' $@12 expression_list ')'
   70       | . NUM
   71       | . '(' expression ')'
   72       | . NOT factor

    NUM      shift, and go to state 63
    ID       shift, and go to state 64
    t_PLUS   shift, and go to state 65
    t_MINUS  shift, and go to state 66
    NOT      shift, and go to state 67
    '('      shift, and go to state 68

    variable           go to state 69
    expression         go to state 109
    simple_expression  go to state 71
    term               go to state 72
    factor             go to state 73


State 78

   11 type: ARRAY '[' NUM '.' . '.' NUM ']' OF standard_type

    '.'  shift, and go to state 110


State 79

   10 type: . standard_type
   11     | . ARRAY '[' NUM '.' '.' NUM ']' OF standard_type
   12 standard_type: . INTEGER
   13              | . REAL
   21 parameter_list: identifier_list ':' . type

    INTEGER  shift, and go to state 25
    REAL     shift, and go to state 26
    ARRAY    shift, and go to state 27

    type           go to state 111
    standard_type  go to state 29


State 80

   19 arguments: '(' parameter_list ')' .

    $default  reduce using rule 19 (arguments)


State 81

    6 identifier_list: . ID
    7                | . identifier_list ',' ID
   23 parameter_list: parameter_list ';' . identifier_list ':' type

    ID  shift, and go to state 6

    identifier_list  go to state 112


State 82

    6 identifier_list: . ID
    7                | . identifier_list ',' ID
   22 parameter_list: parameter_list ',' . identifier_list ':' type

    ID  shift, and go to state 6

    identifier_list  go to state 113


State 83

   17 subprogram_head: FUNCTION ID arguments ':' standard_type . ';'

    ';'  shift, and go to state 114


State 84

   42 variable: . ID
   43         | . ID '[' expression ']'
   46 procedure_statement: ID '(' $@11 . expression_list ')'
   47 expression_list: . expression
   48                | . expression_list ',' expression
   49 expression: . simple_expression
   50           | . simple_expression EQUAL simple_expression
   51           | . simple_expression NOT_EQUAL simple_expression
   52           | . simple_expression LESS simple_expression
   53           | . simple_expression LESS_OR_EQ simple_expression
   54           | . simple_expression GREATER simple_expression
   55           | . simple_expression GREATER_OR_EQ simple_expression
   56 simple_expression: . term
   57                  | . t_PLUS term
   58                  | . t_MINUS term
   59                  | . simple_expression t_PLUS term
   60                  | . simple_expression t_MINUS term
   61                  | . simple_expression OR term
   62                  | . simple_expression AND term
   63 term: . factor
   64     | . term MODULO factor
   65     | . term MUL factor
   66     | . term M_DIV factor
   67 factor: . variable
   69       | . ID '(' $@12 expression_list ')'
   70       | . NUM
   71       | . '(' expression ')'
   72       | . NOT factor

    NUM      shift, and go to state 63
    ID       shift, and go to state 64
    t_PLUS   shift, and go to state 65
    t_MINUS  shift, and go to state 66
    NOT      shift, and go to state 67
    '('      shift, and go to state 68

    variable           go to state 69
    expression_list    go to state 115
    expression         go to state 116
    simple_expression  go to state 71
    term               go to state 72
    factor             go to state 73


State 85

   43 variable: ID '[' expression . ']'

    ']'  shift, and go to state 117


State 86

   41 statement: READ '(' $@10 . expression_list ')'
   42 variable: . ID
   43         | . ID '[' expression ']'
   47 expression_list: . expression
   48                | . expression_list ',' expression
   49 expression: . simple_expression
   50           | . simple_expression EQUAL simple_expression
   51           | . simple_expression NOT_EQUAL simple_expression
   52           | . simple_expression LESS simple_expression
   53           | . simple_expression LESS_OR_EQ simple_expression
   54           | . simple_expression GREATER simple_expression
   55           | . simple_expression GREATER_OR_EQ simple_expression
   56 simple_expression: . term
   57                  | . t_PLUS term
   58                  | . t_MINUS term
   59                  | . simple_expression t_PLUS term
   60                  | . simple_expression t_MINUS term
   61                  | . simple_expression OR term
   62                  | . simple_expression AND term
   63 term: . factor
   64     | . term MODULO factor
   65     | . term MUL factor
   66     | . term M_DIV factor
   67 factor: . variable
   69       | . ID '(' $@12 expression_list ')'
   70       | . NUM
   71       | . '(' expression ')'
   72       | . NOT factor

    NUM      shift, and go to state 63
    ID       shift, and go to state 64
    t_PLUS   shift, and go to state 65
    t_MINUS  shift, and go to state 66
    NOT      shift, and go to state 67
    '('      shift, and go to state 68

    variable           go to state 69
    expression_list    go to state 118
    expression         go to state 116
    simple_expression  go to state 71
    term               go to state 72
    factor             go to state 73


State 87

   39 statement: WRITE '(' $@9 . expression_list ')'
   42 variable: . ID
   43         | . ID '[' expression ']'
   47 expression_list: . expression
   48                | . expression_list ',' expression
   49 expression: . simple_expression
   50           | . simple_expression EQUAL simple_expression
   51           | . simple_expression NOT_EQUAL simple_expression
   52           | . simple_expression LESS simple_expression
   53           | . simple_expression LESS_OR_EQ simple_expression
   54           | . simple_expression GREATER simple_expression
   55           | . simple_expression GREATER_OR_EQ simple_expression
   56 simple_expression: . term
   57                  | . t_PLUS term
   58                  | . t_MINUS term
   59                  | . simple_expression t_PLUS term
   60                  | . simple_expression t_MINUS term
   61                  | . simple_expression OR term
   62                  | . simple_expression AND term
   63 term: . factor
   64     | . term MODULO factor
   65     | . term MUL factor
   66     | . term M_DIV factor
   67 factor: . variable
   69       | . ID '(' $@12 expression_list ')'
   70       | . NUM
   71       | . '(' expression ')'
   72       | . NOT factor

    NUM      shift, and go to state 63
    ID       shift, and go to state 64
    t_PLUS   shift, and go to state 65
    t_MINUS  shift, and go to state 66
    NOT      shift, and go to state 67
    '('      shift, and go to state 68

    variable           go to state 69
    expression_list    go to state 119
    expression         go to state 116
    simple_expression  go to state 71
    term               go to state 72
    factor             go to state 73


State 88

   68 $@12: . %empty
   69 factor: ID '(' . $@12 expression_list ')'

    $default  reduce using rule 68 ($@12)

    $@12  go to state 120


State 89

   57 simple_expression: t_PLUS term .  [END_TOKEN, THEN, ELSE, DO, OR, EQUAL, NOT_EQUAL, LESS, LESS_OR_EQ, GREATER, GREATER_OR_EQ, t_PLUS, t_MINUS, AND, ')', ';', ',', ']']
   64 term: term . MODULO factor
   65     | term . MUL factor
   66     | term . M_DIV factor

    MODULO  shift, and go to state 104
    MUL     shift, and go to state 105
    M_DIV   shift, and go to state 106

    $default  reduce using rule 57 (simple_expression)


State 90

   58 simple_expression: t_MINUS term .  [END_TOKEN, THEN, ELSE, DO, OR, EQUAL, NOT_EQUAL, LESS, LESS_OR_EQ, GREATER, GREATER_OR_EQ, t_PLUS, t_MINUS, AND, ')', ';', ',', ']']
   64 term: term . MODULO factor
   65     | term . MUL factor
   66     | term . M_DIV factor

    MODULO  shift, and go to state 104
    MUL     shift, and go to state 105
    M_DIV   shift, and go to state 106

    $default  reduce using rule 58 (simple_expression)


State 91

   72 factor: NOT factor .

    $default  reduce using rule 72 (factor)


State 92

   71 factor: '(' expression . ')'

    ')'  shift, and go to state 121


State 93

   34 statement: IF expression @5 . THEN statement @6 ELSE statement

    THEN  shift, and go to state 122


State 94

   42 variable: . ID
   43         | . ID '[' expression ']'
   61 simple_expression: simple_expression OR . term
   63 term: . factor
   64     | . term MODULO factor
   65     | . term MUL factor
   66     | . term M_DIV factor
   67 factor: . variable
   69       | . ID '(' $@12 expression_list ')'
   70       | . NUM
   71       | . '(' expression ')'
   72       | . NOT factor

    NUM  shift, and go to state 63
    ID   shift, and go to state 64
    NOT  shift, and go to state 67
    '('  shift, and go to state 68

    variable  go to state 69
    term      go to state 123
    factor    go to state 73


State 95

   42 variable: . ID
   43         | . ID '[' expression ']'
   50 expression: simple_expression EQUAL . simple_expression
   56 simple_expression: . term
   57                  | . t_PLUS term
   58                  | . t_MINUS term
   59                  | . simple_expression t_PLUS term
   60                  | . simple_expression t_MINUS term
   61                  | . simple_expression OR term
   62                  | . simple_expression AND term
   63 term: . factor
   64     | . term MODULO factor
   65     | . term MUL factor
   66     | . term M_DIV factor
   67 factor: . variable
   69       | . ID '(' $@12 expression_list ')'
   70       | . NUM
   71       | . '(' expression ')'
   72       | . NOT factor

    NUM      shift, and go to state 63
    ID       shift, and go to state 64
    t_PLUS   shift, and go to state 65
    t_MINUS  shift, and go to state 66
    NOT      shift, and go to state 67
    '('      shift, and go to state 68

    variable           go to state 69
    simple_expression  go to state 124
    term               go to state 72
    factor             go to state 73


State 96

   42 variable: . ID
   43         | . ID '[' expression ']'
   51 expression: simple_expression NOT_EQUAL . simple_expression
   56 simple_expression: . term
   57                  | . t_PLUS term
   58                  | . t_MINUS term
   59                  | . simple_expression t_PLUS term
   60                  | . simple_expression t_MINUS term
   61                  | . simple_expression OR term
   62                  | . simple_expression AND term
   63 term: . factor
   64     | . term MODULO factor
   65     | . term MUL factor
   66     | . term M_DIV factor
   67 factor: . variable
   69       | . ID '(' $@12 expression_list ')'
   70       | . NUM
   71       | . '(' expression ')'
   72       | . NOT factor

    NUM      shift, and go to state 63
    ID       shift, and go to state 64
    t_PLUS   shift, and go to state 65
    t_MINUS  shift, and go to state 66
    NOT      shift, and go to state 67
    '('      shift, and go to state 68

    variable           go to state 69
    simple_expression  go to state 125
    term               go to state 72
    factor             go to state 73


State 97

   42 variable: . ID
   43         | . ID '[' expression ']'
   52 expression: simple_expression LESS . simple_expression
   56 simple_expression: . term
   57                  | . t_PLUS term
   58                  | . t_MINUS term
   59                  | . simple_expression t_PLUS term
   60                  | . simple_expression t_MINUS term
   61                  | . simple_expression OR term
   62                  | . simple_expression AND term
   63 term: . factor
   64     | . term MODULO factor
   65     | . term MUL factor
   66     | . term M_DIV factor
   67 factor: . variable
   69       | . ID '(' $@12 expression_list ')'
   70       | . NUM
   71       | . '(' expression ')'
   72       | . NOT factor

    NUM      shift, and go to state 63
    ID       shift, and go to state 64
    t_PLUS   shift, and go to state 65
    t_MINUS  shift, and go to state 66
    NOT      shift, and go to state 67
    '('      shift, and go to state 68

    variable           go to state 69
    simple_expression  go to state 126
    term               go to state 72
    factor             go to state 73


State 98

   42 variable: . ID
   43         | . ID '[' expression ']'
   53 expression: simple_expression LESS_OR_EQ . simple_expression
   56 simple_expression: . term
   57                  | . t_PLUS term
   58                  | . t_MINUS term
   59                  | . simple_expression t_PLUS term
   60                  | . simple_expression t_MINUS term
   61                  | . simple_expression OR term
   62                  | . simple_expression AND term
   63 term: . factor
   64     | . term MODULO factor
   65     | . term MUL factor
   66     | . term M_DIV factor
   67 factor: . variable
   69       | . ID '(' $@12 expression_list ')'
   70       | . NUM
   71       | . '(' expression ')'
   72       | . NOT factor

    NUM      shift, and go to state 63
    ID       shift, and go to state 64
    t_PLUS   shift, and go to state 65
    t_MINUS  shift, and go to state 66
    NOT      shift, and go to state 67
    '('      shift, and go to state 68

    variable           go to state 69
    simple_expression  go to state 127
    term               go to state 72
    factor             go to state 73


State 99

   42 variable: . ID
   43         | . ID '[' expression ']'
   54 expression: simple_expression GREATER . simple_expression
   56 simple_expression: . term
   57                  | . t_PLUS term
   58                  | . t_MINUS term
   59                  | . simple_expression t_PLUS term
   60                  | . simple_expression t_MINUS term
   61                  | . simple_expression OR term
   62                  | . simple_expression AND term
   63 term: . factor
   64     | . term MODULO factor
   65     | . term MUL factor
   66     | . term M_DIV factor
   67 factor: . variable
   69       | . ID '(' $@12 expression_list ')'
   70       | . NUM
   71       | . '(' expression ')'
   72       | . NOT factor

    NUM      shift, and go to state 63
    ID       shift, and go to state 64
    t_PLUS   shift, and go to state 65
    t_MINUS  shift, and go to state 66
    NOT      shift, and go to state 67
    '('      shift, and go to state 68

    variable           go to state 69
    simple_expression  go to state 128
    term               go to state 72
    factor             go to state 73


State 100

   42 variable: . ID
   43         | . ID '[' expression ']'
   55 expression: simple_expression GREATER_OR_EQ . simple_expression
   56 simple_expression: . term
   57                  | . t_PLUS term
   58                  | . t_MINUS term
   59                  | . simple_expression t_PLUS term
   60                  | . simple_expression t_MINUS term
   61                  | . simple_expression OR term
   62                  | . simple_expression AND term
   63 term: . factor
   64     | . term MODULO factor
   65     | . term MUL factor
   66     | . term M_DIV factor
   67 factor: . variable
   69       | . ID '(' $@12 expression_list ')'
   70       | . NUM
   71       | . '(' expression ')'
   72       | . NOT factor

    NUM      shift, and go to state 63
    ID       shift, and go to state 64
    t_PLUS   shift, and go to state 65
    t_MINUS  shift, and go to state 66
    NOT      shift, and go to state 67
    '('      shift, and go to state 68

    variable           go to state 69
    simple_expression  go to state 129
    term               go to state 72
    factor             go to state 73


State 101

   42 variable: . ID
   43         | . ID '[' expression ']'
   59 simple_expression: simple_expression t_PLUS . term
   63 term: . factor
   64     | . term MODULO factor
   65     | . term MUL factor
   66     | . term M_DIV factor
   67 factor: . variable
   69       | . ID '(' $@12 expression_list ')'
   70       | . NUM
   71       | . '(' expression ')'
   72       | . NOT factor

    NUM  shift, and go to state 63
    ID   shift, and go to state 64
    NOT  shift, and go to state 67
    '('  shift, and go to state 68

    variable  go to state 69
    term      go to state 130
    factor    go to state 73


State 102

   42 variable: . ID
   43         | . ID '[' expression ']'
   60 simple_expression: simple_expression t_MINUS . term
   63 term: . factor
   64     | . term MODULO factor
   65     | . term MUL factor
   66     | . term M_DIV factor
   67 factor: . variable
   69       | . ID '(' $@12 expression_list ')'
   70       | . NUM
   71       | . '(' expression ')'
   72       | . NOT factor

    NUM  shift, and go to state 63
    ID   shift, and go to state 64
    NOT  shift, and go to state 67
    '('  shift, and go to state 68

    variable  go to state 69
    term      go to state 131
    factor    go to state 73


State 103

   42 variable: . ID
   43         | . ID '[' expression ']'
   62 simple_expression: simple_expression AND . term
   63 term: . factor
   64     | . term MODULO factor
   65     | . term MUL factor
   66     | . term M_DIV factor
   67 factor: . variable
   69       | . ID '(' $@12 expression_list ')'
   70       | . NUM
   71       | . '(' expression ')'
   72       | . NOT factor

    NUM  shift, and go to state 63
    ID   shift, and go to state 64
    NOT  shift, and go to state 67
    '('  shift, and go to state 68

    variable  go to state 69
    term      go to state 132
    factor    go to state 73


State 104

   42 variable: . ID
   43         | . ID '[' expression ']'
   64 term: term MODULO . factor
   67 factor: . variable
   69       | . ID '(' $@12 expression_list ')'
   70       | . NUM
   71       | . '(' expression ')'
   72       | . NOT factor

    NUM  shift, and go to state 63
    ID   shift, and go to state 64
    NOT  shift, and go to state 67
    '('  shift, and go to state 68

    variable  go to state 69
    factor    go to state 133


State 105

   42 variable: . ID
   43         | . ID '[' expression ']'
   65 term: term MUL . factor
   67 factor: . variable
   69       | . ID '(' $@12 expression_list ')'
   70       | . NUM
   71       | . '(' expression ')'
   72       | . NOT factor

    NUM  shift, and go to state 63
    ID   shift, and go to state 64
    NOT  shift, and go to state 67
    '('  shift, and go to state 68

    variable  go to state 69
    factor    go to state 134


State 106

   42 variable: . ID
   43         | . ID '[' expression ']'
   66 term: term M_DIV . factor
   67 factor: . variable
   69       | . ID '(' $@12 expression_list ')'
   70       | . NUM
   71       | . '(' expression ')'
   72       | . NOT factor

    NUM  shift, and go to state 63
    ID   shift, and go to state 64
    NOT  shift, and go to state 67
    '('  shift, and go to state 68

    variable  go to state 69
    factor    go to state 135


State 107

   37 statement: WHILE @7 expression . DO @8 statement

    DO  shift, and go to state 136


State 108

   28 statement_list: statement_list ';' statement .

    $default  reduce using rule 28 (statement_list)


State 109

   29 statement: variable ASSIGNOP expression .

    $default  reduce using rule 29 (statement)


State 110

   11 type: ARRAY '[' NUM '.' '.' . NUM ']' OF standard_type

    NUM  shift, and go to state 137


State 111

   21 parameter_list: identifier_list ':' type .

    $default  reduce using rule 21 (parameter_list)


State 112

    7 identifier_list: identifier_list . ',' ID
   23 parameter_list: parameter_list ';' identifier_list . ':' type

    ','  shift, and go to state 8
    ':'  shift, and go to state 138


State 113

    7 identifier_list: identifier_list . ',' ID
   22 parameter_list: parameter_list ',' identifier_list . ':' type

    ','  shift, and go to state 8
    ':'  shift, and go to state 139


State 114

   17 subprogram_head: FUNCTION ID arguments ':' standard_type ';' .

    $default  reduce using rule 17 (subprogram_head)


State 115

   46 procedure_statement: ID '(' $@11 expression_list . ')'
   48 expression_list: expression_list . ',' expression

    ')'  shift, and go to state 140
    ','  shift, and go to state 141


State 116

   47 expression_list: expression .

    $default  reduce using rule 47 (expression_list)


State 117

   43 variable: ID '[' expression ']' .

    $default  reduce using rule 43 (variable)


State 118

   41 statement: READ '(' $@10 expression_list . ')'
   48 expression_list: expression_list . ',' expression

    ')'  shift, and go to state 142
    ','  shift, and go to state 141


State 119

   39 statement: WRITE '(' $@9 expression_list . ')'
   48 expression_list: expression_list . ',' expression

    ')'  shift, and go to state 143
    ','  shift, and go to state 141


State 120

   42 variable: . ID
   43         | . ID '[' expression ']'
   47 expression_list: . expression
   48                | . expression_list ',' expression
   49 expression: . simple_expression
   50           | . simple_expression EQUAL simple_expression
   51           | . simple_expression NOT_EQUAL simple_expression
   52           | . simple_expression LESS simple_expression
   53           | . simple_expression LESS_OR_EQ simple_expression
   54           | . simple_expression GREATER simple_expression
   55           | . simple_expression GREATER_OR_EQ simple_expression
   56 simple_expression: . term
   57                  | . t_PLUS term
   58                  | . t_MINUS term
   59                  | . simple_expression t_PLUS term
   60                  | . simple_expression t_MINUS term
   61                  | . simple_expression OR term
   62                  | . simple_expression AND term
   63 term: . factor
   64     | . term MODULO factor
   65     | . term MUL factor
   66     | . term M_DIV factor
   67 factor: . variable
   69       | . ID '(' $@12 expression_list ')'
   69       | ID '(' $@12 . expression_list ')'
   70       | . NUM
   71       | . '(' expression ')'
   72       | . NOT factor

    NUM      shift, and go to state 63
    ID       shift, and go to state 64
    t_PLUS   shift, and go to state 65
    t_MINUS  shift, and go to state 66
    NOT      shift, and go to state 67
    '('      shift, and go to state 68

    variable           go to state 69
    expression_list    go to state 144
    expression         go to state 116
    simple_expression  go to state 71
    term               go to state 72
    factor             go to state 73


State 121

   71 factor: '(' expression ')' .

    $default  reduce using rule 71 (factor)


State 122

   24 compound_statement: . BEGIN_TOKEN optional_statements END_TOKEN
   29 statement: . variable ASSIGNOP expression
   30          | . procedure_statement
   31          | . compound_statement
   34          | . IF expression @5 THEN statement @6 ELSE statement
   34          | IF expression @5 THEN . statement @6 ELSE statement
   37          | . WHILE @7 expression DO @8 statement
   39          | . WRITE '(' $@9 expression_list ')'
   41          | . READ '(' $@10 expression_list ')'
   42 variable: . ID
   43         | . ID '[' expression ']'
   44 procedure_statement: . ID
   46                    | . ID '(' $@11 expression_list ')'

    ID           shift, and go to state 41
    BEGIN_TOKEN  shift, and go to state 32
    READ         shift, and go to state 42
    WRITE        shift, and go to state 43
    IF           shift, and go to state 44
    WHILE        shift, and go to state 45

    compound_statement   go to state 46
    statement            go to state 145
    variable             go to state 50
    procedure_statement  go to state 51


State 123

   61 simple_expression: simple_expression OR term .  [END_TOKEN, THEN, ELSE, DO, OR, EQUAL, NOT_EQUAL, LESS, LESS_OR_EQ, GREATER, GREATER_OR_EQ, t_PLUS, t_MINUS, AND, ')', ';', ',', ']']
   64 term: term . MODULO factor
   65     | term . MUL factor
   66     | term . M_DIV factor

    MODULO  shift, and go to state 104
    MUL     shift, and go to state 105
    M_DIV   shift, and go to state 106

    $default  reduce using rule 61 (simple_expression)


State 124

   50 expression: simple_expression EQUAL simple_expression .  [END_TOKEN, THEN, ELSE, DO, ')', ';', ',', ']']
   59 simple_expression: simple_expression . t_PLUS term
   60                  | simple_expression . t_MINUS term
   61                  | simple_expression . OR term
   62                  | simple_expression . AND term

    OR       shift, and go to state 94
    t_PLUS   shift, and go to state 101
    t_MINUS  shift, and go to state 102
    AND      shift, and go to state 103

    $default  reduce using rule 50 (expression)


State 125

   51 expression: simple_expression NOT_EQUAL simple_expression .  [END_TOKEN, THEN, ELSE, DO, ')', ';', ',', ']']
   59 simple_expression: simple_expression . t_PLUS term
   60                  | simple_expression . t_MINUS term
   61                  | simple_expression . OR term
   62                  | simple_expression . AND term

    OR       shift, and go to state 94
    t_PLUS   shift, and go to state 101
    t_MINUS  shift, and go to state 102
    AND      shift, and go to state 103

    $default  reduce using rule 51 (expression)


State 126

   52 expression: simple_expression LESS simple_expression .  [END_TOKEN, THEN, ELSE, DO, ')', ';', ',', ']']
   59 simple_expression: simple_expression . t_PLUS term
   60                  | simple_expression . t_MINUS term
   61                  | simple_expression . OR term
   62                  | simple_expression . AND term

    OR       shift, and go to state 94
    t_PLUS   shift, and go to state 101
    t_MINUS  shift, and go to state 102
    AND      shift, and go to state 103

    $default  reduce using rule 52 (expression)


State 127

   53 expression: simple_expression LESS_OR_EQ simple_expression .  [END_TOKEN, THEN, ELSE, DO, ')', ';', ',', ']']
   59 simple_expression: simple_expression . t_PLUS term
   60                  | simple_expression . t_MINUS term
   61                  | simple_expression . OR term
   62                  | simple_expression . AND term

    OR       shift, and go to state 94
    t_PLUS   shift, and go to state 101
    t_MINUS  shift, and go to state 102
    AND      shift, and go to state 103

    $default  reduce using rule 53 (expression)


State 128

   54 expression: simple_expression GREATER simple_expression .  [END_TOKEN, THEN, ELSE, DO, ')', ';', ',', ']']
   59 simple_expression: simple_expression . t_PLUS term
   60                  | simple_expression . t_MINUS term
   61                  | simple_expression . OR term
   62                  | simple_expression . AND term

    OR       shift, and go to state 94
    t_PLUS   shift, and go to state 101
    t_MINUS  shift, and go to state 102
    AND      shift, and go to state 103

    $default  reduce using rule 54 (expression)


State 129

   55 expression: simple_expression GREATER_OR_EQ simple_expression .  [END_TOKEN, THEN, ELSE, DO, ')', ';', ',', ']']
   59 simple_expression: simple_expression . t_PLUS term
   60                  | simple_expression . t_MINUS term
   61                  | simple_expression . OR term
   62                  | simple_expression . AND term

    OR       shift, and go to state 94
    t_PLUS   shift, and go to state 101
    t_MINUS  shift, and go to state 102
    AND      shift, and go to state 103

    $default  reduce using rule 55 (expression)


State 130

   59 simple_expression: simple_expression t_PLUS term .  [END_TOKEN, THEN, ELSE, DO, OR, EQUAL, NOT_EQUAL, LESS, LESS_OR_EQ, GREATER, GREATER_OR_EQ, t_PLUS, t_MINUS, AND, ')', ';', ',', ']']
   64 term: term . MODULO factor
   65     | term . MUL factor
   66     | term . M_DIV factor

    MODULO  shift, and go to state 104
    MUL     shift, and go to state 105
    M_DIV   shift, and go to state 106

    $default  reduce using rule 59 (simple_expression)


State 131

   60 simple_expression: simple_expression t_MINUS term .  [END_TOKEN, THEN, ELSE, DO, OR, EQUAL, NOT_EQUAL, LESS, LESS_OR_EQ, GREATER, GREATER_OR_EQ, t_PLUS, t_MINUS, AND, ')', ';', ',', ']']
   64 term: term . MODULO factor
   65     | term . MUL factor
   66     | term . M_DIV factor

    MODULO  shift, and go to state 104
    MUL     shift, and go to state 105
    M_DIV   shift, and go to state 106

    $default  reduce using rule 60 (simple_expression)


State 132

   62 simple_expression: simple_expression AND term .  [END_TOKEN, THEN, ELSE, DO, OR, EQUAL, NOT_EQUAL, LESS, LESS_OR_EQ, GREATER, GREATER_OR_EQ, t_PLUS, t_MINUS, AND, ')', ';', ',', ']']
   64 term: term . MODULO factor
   65     | term . MUL factor
   66     | term . M_DIV factor

    MODULO  shift, and go to state 104
    MUL     shift, and go to state 105
    M_DIV   shift, and go to state 106

    $default  reduce using rule 62 (simple_expression)


State 133

   64 term: term MODULO factor .

    $default  reduce using rule 64 (term)


State 134

   65 term: term MUL factor .

    $default  reduce using rule 65 (term)


State 135

   66 term: term M_DIV factor .

    $default  reduce using rule 66 (term)


State 136

   36 @8: . %empty
   37 statement: WHILE @7 expression DO . @8 statement

    $default  reduce using rule 36 (@8)

    @8  go to state 146


State 137

   11 type: ARRAY '[' NUM '.' '.' NUM . ']' OF standard_type

    ']'  shift, and go to state 147


State 138

   10 type: . standard_type
   11     | . ARRAY '[' NUM '.' '.' NUM ']' OF standard_type
   12 standard_type: . INTEGER
   13              | . REAL
   23 parameter_list: parameter_list ';' identifier_list ':' . type

    INTEGER  shift, and go to state 25
    REAL     shift, and go to state 26
    ARRAY    shift, and go to state 27

    type           go to state 148
    standard_type  go to state 29


State 139

   10 type: . standard_type
   11     | . ARRAY '[' NUM '.' '.' NUM ']' OF standard_type
   12 standard_type: . INTEGER
   13              | . REAL
   22 parameter_list: parameter_list ',' identifier_list ':' . type

    INTEGER  shift, and go to state 25
    REAL     shift, and go to state 26
    ARRAY    shift, and go to state 27

    type           go to state 149
    standard_type  go to state 29


State 140

   46 procedure_statement: ID '(' $@11 expression_list ')' .

    $default  reduce using rule 46 (procedure_statement)


State 141

   42 variable: . ID
   43         | . ID '[' expression ']'
   48 expression_list: expression_list ',' . expression
   49 expression: . simple_expression
   50           | . simple_expression EQUAL simple_expression
   51           | . simple_expression NOT_EQUAL simple_expression
   52           | . simple_expression LESS simple_expression
   53           | . simple_expression LESS_OR_EQ simple_expression
   54           | . simple_expression GREATER simple_expression
   55           | . simple_expression GREATER_OR_EQ simple_expression
   56 simple_expression: . term
   57                  | . t_PLUS term
   58                  | . t_MINUS term
   59                  | . simple_expression t_PLUS term
   60                  | . simple_expression t_MINUS term
   61                  | . simple_expression OR term
   62                  | . simple_expression AND term
   63 term: . factor
   64     | . term MODULO factor
   65     | . term MUL factor
   66     | . term M_DIV factor
   67 factor: . variable
   69       | . ID '(' $@12 expression_list ')'
   70       | . NUM
   71       | . '(' expression ')'
   72       | . NOT factor

    NUM      shift, and go to state 63
    ID       shift, and go to state 64
    t_PLUS   shift, and go to state 65
    t_MINUS  shift, and go to state 66
    NOT      shift, and go to state 67
    '('      shift, and go to state 68

    variable           go to state 69
    expression         go to state 150
    simple_expression  go to state 71
    term               go to state 72
    factor             go to state 73


State 142

   41 statement: READ '(' $@10 expression_list ')' .

    $default  reduce using rule 41 (statement)


State 143

   39 statement: WRITE '(' $@9 expression_list ')' .

    $default  reduce using rule 39 (statement)


State 144

   48 expression_list: expression_list . ',' expression
   69 factor: ID '(' $@12 expression_list . ')'

    ')'  shift, and go to state 151
    ','  shift, and go to state 141


State 145

   33 @6: . %empty
   34 statement: IF expression @5 THEN statement . @6 ELSE statement

    $default  reduce using rule 33 (@6)

    @6  go to state 152


State 146

   24 compound_statement: . BEGIN_TOKEN optional_statements END_TOKEN
   29 statement: . variable ASSIGNOP expression
   30          | . procedure_statement
   31          | . compound_statement
   34          | . IF expression @5 THEN statement @6 ELSE statement
   37          | . WHILE @7 expression DO @8 statement
   37          | WHILE @7 expression DO @8 . statement
   39          | . WRITE '(' $@9 expression_list ')'
   41          | . READ '(' $@10 expression_list ')'
   42 variable: . ID
   43         | . ID '[' expression ']'
   44 procedure_statement: . ID
   46                    | . ID '(' $@11 expression_list ')'

    ID           shift, and go to state 41
    BEGIN_TOKEN  shift, and go to state 32
    READ         shift, and go to state 42
    WRITE        shift, and go to state 43
    IF           shift, and go to state 44
    WHILE        shift, and go to state 45

    compound_statement   go to state 46
    statement            go to state 153
    variable             go to state 50
    procedure_statement  go to state 51


State 147

   11 type: ARRAY '[' NUM '.' '.' NUM ']' . OF standard_type

    OF  shift, and go to state 154


State 148

   23 parameter_list: parameter_list ';' identifier_list ':' type .

    $default  reduce using rule 23 (parameter_list)


State 149

   22 parameter_list: parameter_list ',' identifier_list ':' type .

    $default  reduce using rule 22 (parameter_list)


State 150

   48 expression_list: expression_list ',' expression .

    $default  reduce using rule 48 (expression_list)


State 151

   69 factor: ID '(' $@12 expression_list ')' .

    $default  reduce using rule 69 (factor)


State 152

   34 statement: IF expression @5 THEN statement @6 . ELSE statement

    ELSE  shift, and go to state 155


State 153

   37 statement: WHILE @7 expression DO @8 statement .

    $default  reduce using rule 37 (statement)


State 154

   11 type: ARRAY '[' NUM '.' '.' NUM ']' OF . standard_type
   12 standard_type: . INTEGER
   13              | . REAL

    INTEGER  shift, and go to state 25
    REAL     shift, and go to state 26

    standard_type  go to state 156


State 155

   24 compound_statement: . BEGIN_TOKEN optional_statements END_TOKEN
   29 statement: . variable ASSIGNOP expression
   30          | . procedure_statement
   31          | . compound_statement
   34          | . IF expression @5 THEN statement @6 ELSE statement
   34          | IF expression @5 THEN statement @6 ELSE . statement
   37          | . WHILE @7 expression DO @8 statement
   39          | . WRITE '(' $@9 expression_list ')'
   41          | . READ '(' $@10 expression_list ')'
   42 variable: . ID
   43         | . ID '[' expression ']'
   44 procedure_statement: . ID
   46                    | . ID '(' $@11 expression_list ')'

    ID           shift, and go to state 41
    BEGIN_TOKEN  shift, and go to state 32
    READ         shift, and go to state 42
    WRITE        shift, and go to state 43
    IF           shift, and go to state 44
    WHILE        shift, and go to state 45

    compound_statement   go to state 46
    statement            go to state 157
    variable             go to state 50
    procedure_statement  go to state 51


State 156

   11 type: ARRAY '[' NUM '.' '.' NUM ']' OF standard_type .

    $default  reduce using rule 11 (type)


State 157

   34 statement: IF expression @5 THEN statement @6 ELSE statement .

    $default  reduce using rule 34 (statement)
